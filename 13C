#include <iostream>
#include<vector>
#include<cmath>
using namespace std;
void B (vector<double> w, double r, vector<double> t){
    vector<vector<double>> k (2, vector<double>(3));
    k[0][0] = t[0];
    k[0][1] = t[1];
    k[0][2] = t[2];
    double f = sqrt(k[0][0]*k[0][0]+k[0][1]*k[0][1]);
    k[0][0]/=f;
    k[0][1]/=f;
    k[0][2]/=f;
    bool e = false;
    double h = abs(k[0][0]*w[0]+k[0][1]*w[1]+k[0][2]);
    if(abs(k[0][0]*w[0]+k[0][1]*w[1]+k[0][2]) > r){
    cerr << h;
         return;
    } else if (abs(k[0][0]*w[0]+k[0][1]*w[1]+k[0][2]) == r){

        e = true;
    } else {

    }
    k[1][0] = k[0][1];
    k[1][1] = -k[0][0];
    k[1][2] = k[0][0]*w[1] - k[0][1]*w[0];
    double x = (-k[0][2]*k[1][1] + k[1][2]*k[0][1])*1./(k[0][0]*k[1][1] - k[1][0]*k[0][1]);
    double y = (-k[0][0]*k[1][2] + k[1][0]*k[0][2])*1./(k[0][0]*k[1][1] - k[1][0]*k[0][1]);
    cout << x+k[0][1]*sqrt(r*r-h*h) << " " << y-k[0][0]*sqrt(r*r-h*h) << endl;
    if(e) return;
    cout << x-k[0][1]*sqrt(r*r-h*h) << " " << y+k[0][0]*sqrt(r*r-h*h) << endl;
}
int main()
{
    cout.precision(20);
    vector<vector<double>> w(2, vector<double>(2));
    vector<double> r(2);
    bool e = false;
    for(int i = 0; i < 2;++i){
        cin >> w[i][0] >> w[i][1] >> r[i];
    }
    if(w[0][0] == w[1][0] && w[0][1] == w[1][1]){
        if(r[0]==r[1]) {cout << 3; return 0;}
        else {cout << 0; return 0;}
    }
    double h = sqrt((w[0][0]-w[1][0])*(w[0][0]-w[1][0])+(w[0][1]-w[1][1])*(w[0][1]-w[1][1]));

    if (abs(h-(r[0]+r[1]))<1e-6 || abs(r[0]+h-r[1])<1e-6 || abs(r[1]+h-r[0]) < 1e-6) {cout << 1 << endl; e = true;}
    else if(h > r[0]+r[1] || h+r[0] < r[1] || h+r[1] < r[0]){cout << 0; return 0;}
    else {cout << 2 << endl;}
    vector<vector<double>> k(2, vector<double>(3));
    k[0][0] = w[1][1] - w[0][1];
    k[0][1] = w[0][0] - w[1][0];
    k[0][2] = w[1][0]*w[0][1] - w[0][0]*w[1][1];
    double x = w[0][0] + (w[1][0]-w[0][0])*(h*h+r[0]*r[0]-r[1]*r[1])*1./(2*h)*1./(h);
    double y = w[0][1] + (w[1][1]-w[0][1])*(h*h+r[0]*r[0]-r[1]*r[1])*1./(2*h)*1./h;
    k[1][0] = k[0][1];
    k[1][1] = -k[0][0];
    k[1][2] =  k[0][0]*y - k[0][1]*x;
    double q = (h*h+r[0]*r[0]-r[1]*r[1])*1./(2*h);
    double f = sqrt(k[1][0]*k[1][0]+k[1][1]*k[1][1]);
    k[1][0]/=f;
    k[1][1]/=f;
    k[1][2]/=f;
    cout << x-k[1][1]*sqrt(r[0]*r[0]-q*q) << " " << y+k[1][0]*sqrt(r[0]*r[0]-q*q) << endl;
    if(e) return 0;
    cout << x+k[1][1]*sqrt(r[0]*r[0]-q*q) << " " << y-k[1][0]*sqrt(r[0]*r[0]-q*q) << endl;
}
