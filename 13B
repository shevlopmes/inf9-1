#include <iostream>
#include<vector>
#include<cmath>
using namespace std;

int main()
{
    cout.precision(20);
    vector<vector<double>> k(2,vector<double>(3));
    vector<double> w(2);
    double r;
    cin >> w[0] >> w[1] >> r >> k[0][0] >> k[0][1] >> k[0][2];
    double f = sqrt(k[0][0]*k[0][0]+k[0][1]*k[0][1]);
    k[0][0]/=f;
    k[0][1]/=f;
    k[0][2]/=f;
    bool e = false;
    double h = abs(k[0][0]*w[0]+k[0][1]*w[1]+k[0][2]);
    if(abs(k[0][0]*w[0]+k[0][1]*w[1]+k[0][2]) > r){
        cout << 0; return 0;
    } else if (abs(k[0][0]*w[0]+k[0][1]*w[1]+k[0][2]) == r){
        cout << 1 << endl;
        e = true;
    } else {
        cout << 2 << endl;
    }
    k[1][0] = k[0][1];
    k[1][1] = -k[0][0];
    k[1][2] = k[0][0]*w[1] - k[0][1]*w[0];
    double x = (-k[0][2]*k[1][1] + k[1][2]*k[0][1])*1./(k[0][0]*k[1][1] - k[1][0]*k[0][1]);
    double y = (-k[0][0]*k[1][2] + k[1][0]*k[0][2])*1./(k[0][0]*k[1][1] - k[1][0]*k[0][1]);
    cout << x+k[0][1]*sqrt(r*r-h*h) << " " << y-k[0][0]*sqrt(r*r-h*h) << endl;
    if(e) return 0;
    cout << x-k[0][1]*sqrt(r*r-h*h) << " " << y+k[0][0]*sqrt(r*r-h*h) << endl;
}
